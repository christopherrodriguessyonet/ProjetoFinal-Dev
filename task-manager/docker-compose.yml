version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: taskmanager-db
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: taskmanager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 15
    networks:
      - taskmanager-net

  backend:
    build:
      context: ./backend
    container_name: taskmanager-backend
    depends_on:
      - postgres
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/taskmanager
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_PROFILE: dev
      QUARKUS_SMALLRYE_JWT_ENABLED: true
      QUARKUS_HTTP_AUTH_PROACTIVE: false
    ports:
      - 8080:8080
    volumes:
      - ./backend/src/main/resources:/deployments/resources
    command: [ "./wait-for-it.sh", "postgres:5432", "-t", "60", "--", "java", "-jar", "/deployments/quarkus-run.jar" ]
    networks:
      - taskmanager-net
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: taskmanager-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    ports:
      - 3000:3000
    networks:
      - taskmanager-net

  pgadmin:
    image: dpage/pgadmin4
    container_name: taskmanager-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "8081:80"
    depends_on:
      - postgres
    networks:
      - taskmanager-net

volumes:
  postgres_data:


networks:
  taskmanager-net:
    driver: bridge
