#!/bin/bash

echo "üöÄ Iniciando setup do projeto Task Manager..."

# 1. Acessa pasta backend e verifica se Maven est√° instalado
echo "üìÅ Acessando pasta backend para verificar o Maven..."
cd backend || { echo "‚ùå Pasta backend n√£o encontrada"; exit 1; }

if ! command -v mvn &> /dev/null; then
    echo "üì¶ Maven n√£o encontrado. Instalando..."
    sudo apt update && sudo apt install -y maven
else
    echo "‚úî Maven j√° instalado"
fi

# 2. Instala depend√™ncias e empacota o backend
echo "üîß Instalando depend√™ncias e empacotando backend..."
./mvnw clean package -DskipTests || { echo "‚ùå Erro ao empacotar o backend"; exit 1; }

# Volta para a raiz
cd ..

# 3. Acessa pasta frontend e verifica se Node.js/NPM est√£o instalados
echo "üìÅ Acessando pasta frontend para verificar o Node.js/NPM..."
cd frontend || { echo "‚ùå Pasta frontend n√£o encontrada"; exit 1; }

if ! command -v npm &> /dev/null; then
    echo "üì¶ Node.js/NPM n√£o encontrados. Instalando..."
    sudo apt update && sudo apt install -y nodejs npm
else
    echo "‚úî Node.js/NPM j√° instalados"
fi

# 4. Instala depend√™ncias do frontend
echo "üé® Instalando depend√™ncias do frontend..."
npm install || { echo "‚ùå Erro ao instalar depend√™ncias do frontend"; exit 1; }

# Volta para a raiz
cd ..

# 5. Verifica se o usu√°rio atual tem permiss√£o no Docker
echo "üê≥ Subindo containers com Docker Compose..."
if docker info > /dev/null 2>&1; then
    docker compose up --build
else
    echo "‚ö†Ô∏è  Sem permiss√£o para acessar o Docker. Tentando com sudo..."
    sudo docker compose up --build
fi
