# Configurações do Banco de Dados
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://postgres:5432/taskmanager
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
#quarkus.hibernate-orm.database.generation=drop-and-create
#quarkus.hibernate-orm.sql-load-script=import.sql

# Configurações para desenvolvimento local
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/taskmanager
%dev.quarkus.datasource.username=postgres
%dev.quarkus.datasource.password=postgres
#%dev.quarkus.hibernate-orm.database.generation=drop-and-create

# CORS
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:3000
quarkus.http.cors.methods=GET,POST,PUT,DELETE
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
quarkus.http.cors.exposed-headers=*

# Desabilitar Dev Services do Quarkus -  evita containers duplicados
quarkus.datasource.devservices.enabled=false

# JWT
# Assinatura do JWT
smallrye.jwt.sign.key.location=privateKey.pem

# Verificação
mp.jwt.verify.publickey.location=publicKey.pem
mp.jwt.verify.issuer=http://localhost:8080
mp.jwt.verify.audiences=taskmanager

quarkus.smallrye-jwt.enabled=true
quarkus.log.category."io.quarkus.security".level=DEBUG
quarkus.log.category."io.smallrye.jwt".level=DEBUG



quarkus.http.auth.proactive=false
quarkus.http.auth.permission.authenticated.paths=/*
quarkus.http.auth.permission.authenticated.policy=authenticated
quarkus.http.auth.permission.permit-all.paths=/api/auth/*
quarkus.http.auth.permission.permit-all.policy=permit